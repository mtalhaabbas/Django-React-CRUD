{"version":3,"sources":["components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Home","useState","users","setusers","get_users","fetch","then","res","json","data","re","useRef","current","addEventListener","event","recipient","relatedTarget","getAttribute","modalTitle","querySelector","modalBodyInput","textContent","value","username","email","clas","userData","setUserData","postUserData","name","target","submitData","a","preventDefault","method","headers","Accept","body","JSON","stringify","first_name","alert","useEffect","className","type","onSubmit","class","for","id","onChange","scope","map","u","data-bs-toggle","data-bs-target","onClick","deleteUser","ref","aria-labelledby","data-bs-dismiss","aria-label","user","window","location","reload","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9dcb365d.chunk.js","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\n\r\nconst Home = () => {\r\n  const [users, setusers] = useState([]);\r\n  const get_users = () => {\r\n    fetch(\"/user/\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setusers(data);\r\n      });\r\n  };\r\n\r\n  const re = useRef(null);\r\n  if (re.current) {\r\n    re.current.addEventListener(\"show.bs.modal\", function (event) {\r\n      // Button that triggered the modal\r\n      var button = event.relatedTarget;\r\n      // Extract info from data-bs-* attributes\r\n      var recipient = button.getAttribute(\"data-bs-whatever\");\r\n      // If necessary, you could initiate an AJAX request here\r\n      // and then do the updating in a callback.\r\n      //\r\n      // Update the modal's content.\r\n      var modalTitle = re.current.querySelector(\".modal-title\");\r\n      var modalBodyInput = re.current.querySelector(\".modal-body input\");\r\n\r\n      modalTitle.textContent = \"New message to \" + recipient;\r\n      modalBodyInput.value = recipient;\r\n    });\r\n  }\r\n  const [userData, setUserData] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    clas: \"\",\r\n  });\r\n\r\n  const deleteUser = (u) => {\r\n    const res = fetch(`/user/${u}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    });\r\n    if (res) {\r\n      alert(\"Student Deleted\");\r\n      get_users();\r\n    }\r\n  };\r\n  const updateUser = (id, user, email, clas) => {\r\n    const res = fetch(`/user/${id}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        first_name: clas,\r\n        username: user,\r\n        email: email,\r\n      }),\r\n    });\r\n    if (res) {\r\n      alert(\"Student Detail Updated\");\r\n      window.location.reload();\r\n    }\r\n  };\r\n  const postUserData = (event) => {\r\n    let name = event.target.name;\r\n    let value = event.target.value;\r\n    setUserData({ ...userData, [name]: value });\r\n  };\r\n  const submitData = async (event) => {\r\n    event.preventDefault();\r\n    const { username, email, clas } = userData;\r\n    if (username && clas && email) {\r\n      const res = fetch(\"/user/\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          first_name: clas,\r\n          username: username,\r\n          email: email,\r\n        }),\r\n      });\r\n\r\n      if (res) {\r\n        setUserData({\r\n          username: \"\",\r\n          email: \"\",\r\n          clas: \"\",\r\n        });\r\n\r\n        alert(\"Student Added\");\r\n        get_users();\r\n      } else {\r\n        alert(\"plz fill the Student Detail\");\r\n      }\r\n    } else {\r\n      alert(\"plz fill the Student Detail\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    get_users();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container mt-4 mx-auto\">\r\n        <h2 className=\"text-center alert alert-warning\">\r\n          Django React CRUD Application for Students Record\r\n        </h2>\r\n        <div className=\"row mt-5\">\r\n          <div className=\"col-sm-4\">\r\n            <h5 className=\"text-center alert alert-info\">Add New Student</h5>\r\n\r\n            <form type=\"post\" onSubmit={submitData}>\r\n              <div class=\"mb-3\">\r\n                <label for=\"exampleInput\" class=\"form-label\">\r\n                  Username:\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  id=\"exampleInput\"\r\n                  name=\"username\"\r\n                  value={userData.username}\r\n                  onChange={postUserData}\r\n                />\r\n              </div>\r\n              <div class=\"mb-3\">\r\n                <label for=\"exampleInputEmail1\" class=\"form-label\">\r\n                  Email address:\r\n                </label>\r\n                <input\r\n                  type=\"email\"\r\n                  class=\"form-control\"\r\n                  id=\"exampleInputEmail1\"\r\n                  name=\"email\"\r\n                  value={userData.email}\r\n                  onChange={postUserData}\r\n                />\r\n              </div>\r\n              <div class=\"mb-3\">\r\n                <label for=\"exampleInput\" class=\"form-label\">\r\n                  Class Name:\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  id=\"exampleInputPassword1\"\r\n                  name=\"clas\"\r\n                  value={userData.clas}\r\n                  onChange={postUserData}\r\n                />\r\n              </div>\r\n              <button type=\"submit\" class=\"btn btn-success\">\r\n                Add\r\n              </button>\r\n            </form>\r\n          </div>\r\n\r\n          <div className=\"col-sm-8\">\r\n            <h5 className=\"text-center alert alert-info\">\r\n              All Students Details\r\n            </h5>\r\n            <table class=\"table \">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">Id</th>\r\n                  <th scope=\"col\">Username</th>\r\n                  <th scope=\"col\">Email</th>\r\n                  <th scope=\"col\">Class</th>\r\n                  <th scope=\"col\">Action</th>\r\n                  <th scope=\"col\">Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {users.map((u) => (\r\n                  <tr>\r\n                    <th>{u.id}</th>\r\n                    <td>{u.username}</td>\r\n                    <td>{u.email}</td>\r\n                    <td>{u.first_name}</td>\r\n                    <td>\r\n                      <button\r\n                        className=\"btn btn-outline-warning mx-auto\"\r\n                        type=\"button\"\r\n                        value=\"Edit\"\r\n                        data-bs-toggle=\"modal\"\r\n                        data-bs-target={`#exampleModal${u.id}`}\r\n                      >\r\n                        Edit\r\n                      </button>\r\n                    </td>\r\n                    <td>\r\n                      <button\r\n                        className=\"btn btn-outline-danger mx-auto\"\r\n                        type=\"button\"\r\n                        value=\"Delete\"\r\n                        onClick={() => deleteUser(u.id)}\r\n                      >\r\n                        Delete\r\n                      </button>\r\n                    </td>\r\n                    <div\r\n                      class=\"modal fade\"\r\n                      id={`exampleModal${u.id}`}\r\n                      ref={re}\r\n                      aria-labelledby=\"exampleModalLabel\"\r\n                    >\r\n                      <div class=\"modal-dialog modal-dialog-centered\">\r\n                        <div class=\"modal-content\">\r\n                          <div class=\"modal-header\">\r\n                            <h5 class=\"modal-title\" id=\"exampleModalLabel\">\r\n                              Update Student Detail\r\n                            </h5>\r\n                            <button\r\n                              type=\"button\"\r\n                              class=\"btn-close\"\r\n                              data-bs-dismiss=\"modal\"\r\n                              aria-label=\"Close\"\r\n                            ></button>\r\n                          </div>\r\n                          <div class=\"modal-body\">\r\n                            <form>\r\n                              <div class=\"mb-3\">\r\n                                <label\r\n                                  for=\"recipient-name\"\r\n                                  class=\"col-form-label\"\r\n                                >\r\n                                  Name:\r\n                                </label>\r\n                                <input\r\n                                  type=\"text\"\r\n                                  name=\"username\"\r\n                                  class=\"form-control\"\r\n                                  value={u.username}\r\n                                />\r\n                              </div>\r\n                              <div class=\"mb-3\">\r\n                                <label\r\n                                  for=\"recipient-name\"\r\n                                  class=\"col-form-label\"\r\n                                >\r\n                                  Email:\r\n                                </label>\r\n                                <input\r\n                                  type=\"email\"\r\n                                  name=\"email\"\r\n                                  class=\"form-control\"\r\n                                  id=\"\"\r\n                                  value={u.email}\r\n                                />\r\n                              </div>\r\n                              <div class=\"mb-3\">\r\n                                <label\r\n                                  for=\"recipient-name\"\r\n                                  class=\"col-form-label\"\r\n                                >\r\n                                  Class:\r\n                                </label>\r\n                                <input\r\n                                  type=\"text\"\r\n                                  name=\"clas\"\r\n                                  class=\"form-control\"\r\n                                  id=\"\"\r\n                                  value={u.first_name}\r\n                                />\r\n                              </div>\r\n                            </form>\r\n                          </div>\r\n                          <div class=\"modal-footer\">\r\n                            <button\r\n                              type=\"button\"\r\n                              class=\"btn btn-secondary\"\r\n                              data-bs-dismiss=\"modal\"\r\n                            >\r\n                              Close\r\n                            </button>\r\n                            <button\r\n                              type=\"button\"\r\n                              class=\"btn btn-primary\"\r\n                              onClick={() =>\r\n                                updateUser(u.id, u.username, u.email, u.clas)\r\n                              }\r\n                            >\r\n                              Save changes\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import \"./App.css\";\nimport Home from './components/Home'\n\nfunction App() {\n  return (\n   <Home />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}